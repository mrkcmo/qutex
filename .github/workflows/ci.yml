name: Continuous Integration

on: [push, workflow_dispatch]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18.20.0
      - uses: actions/checkout@master
      - name: Install Dependencies
        uses: bahmutov/npm-install@v1.10.1
        with:
          working-directory: services/bot
  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18.20.0
      - uses: actions/checkout@master
      - run: ./services/bot/bin/lint.sh
      - uses: bahmutov/npm-install@v1.10.1
        with:
          run: yarn lint
          working-directory: services/bot
  build-test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Test Docker Container Builds
        run: docker build -t testing:latest services/bot
  test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: szenius/set-timezone@v1.0
        with:
          timezoneLinux: "America/New_York"
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18.20.0
      - uses: actions/checkout@master
      - run: |
          mkdir -p secrets/local/
          echo `openssl rand -hex 64` >> secrets/local/mongoPassword
          echo "DOESNTMATTER" >> secrets/local/token
          sudo docker run -v $(pwd)/secrets/local/mongoPassword:/run/secrets/mongoPassword -e MONGO_INITDB_ROOT_USERNAME=root -e MONGO_INITDB_DATABASE=qutex -e MONGO_INITDB_ROOT_PASSWORD_FILE=/run/secrets/mongoPassword --name mongo -d -p 27017:27017 mongo:4.4.5
      - env:
          QUTEX_TESTING: true
        uses: bahmutov/npm-install@v1.10.1
        with:
          cmd: yarn test
          working-directory: services/bot
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4.0.1
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          name: codecov-umbrella
          slug: mrkcmo/qutex
          fail_ci_if_error: true
